x-logs-defaults:
  &logs_defaults
  logging:
    options:
      max-size: "12m"
      max-file: "5"
    driver: json-file

version: '3'
services:

  caddy:
    <<: *logs_defaults
    image: caddy:2.5.2-alpine
    restart: always
    ports:
      - '80:80'
      - '443:443'
    environment:
      XDG_DATA_HOME: /mount/server/data
      XDG_CONFIG_HOME: /mount/server/config
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ${CADDY_VOLUME:-caddy_data}:/mount/server

  postgres:
    <<: *logs_defaults
    image: "postgis/postgis:13-3.0-alpine"
    restart: always
    environment:
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_USER: "${DB_LOGIN}"
      POSTGRES_DB: matreg
    ports:
      - '5432:5432'
    volumes:
      - ${PG_VOLUME:-pg_data}:/var/lib/postgresql/data
      - ./postgres:/scripts

  hasura:
    <<: *logs_defaults
    image: hasura/graphql-engine:latest
    ports:
      - "8080"
    depends_on:
      - postgres
      - hasura-backend-plus
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: "host=postgres dbname=matreg port=5432 user=${DB_LOGIN} password=${DB_PASSWORD}"
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: "$DB_PASSWORD"
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: "anonymous"
      # HASURA_GRAPHQL_JWT_SECRET: '{"type": "RS256", "key": "$JWT_SECRET"}'
      HASURA_GRAPHQL_ENABLE_REMOTE_SCHEMA_PERMISSIONS: 'true'

  hasura-backend-plus:
    <<: *logs_defaults
    image: nhost/hasura-backend-plus:2.7.1
    ports:
      - '4000'
    restart: always
    volumes:
      - ./mail-templates:/app/custom/emails
      - ./storage-rules:/app/custom/storage-rules
    environment:
      HOST: 0.0.0.0
      PORT: 4000
      MAGIC_LINK_ENABLED: "true"
      DATABASE_URL: >-
        postgres://${DB_LOGIN}:${DB_PASSWORD}@postgres:5432/matreg
      REGISTRATION_CUSTOM_FIELDS: "display_name"
      JWT_CUSTOM_FIELDS: display_name,avatar_url
      HIBP_ENABLED: "false"
      SERVER_URL: https://api.matreg.info
      JWT_KEY: '$JWT_PRIVATE_KEY'
      JWT_ALGORITHM: RS256
      HASURA_ENDPOINT: http://hasura:8080/v1/graphql
      HASURA_GRAPHQL_ADMIN_SECRET: "$DB_PASSWORD"

      # TODO SETUP S3
      # S3_ENDPOINT: https://s3.eu-north-1.amazonaws.com
      # S3_BUCKET: s3.matreg.info
      # S3_ACCESS_KEY_ID: AKIA2IYHTX7JSN5BFAEC
      # S3_SECRET_ACCESS_KEY: '${S3_SECRET_ACCESS_KEY}'

      # TODO SETUP AUTH

      # GOOGLE_ENABLED: 'true'
      # GOOGLE_CLIENT_ID: ''
      # GOOGLE_CLIENT_SECRET: '${GOOGLE_CLIENT_SECRET}'
      # APPLE_ENABLED: 'true'
      # APPLE_CLIENT_ID: '${APPLE_CLIENT_ID}'
      # APPLE_TEAM_ID: '${APPLE_TEAM_ID}'
      # APPLE_KEY_ID: '${APPLE_KEY_ID}'
      # APPLE_PRIVATE_KEY: '${APPLE_PRIVATE_KEY}'
      # FACEBOOK_ENABLED: 'true'
      # FACEBOOK_CLIENT_ID: '1075569679634321'
      # FACEBOOK_CLIENT_SECRET: '${FACEBOOK_CLIENT_SECRET}'
      # AUTO_MIGRATE: 'true'
      # COOKIE_SAME_SITE: 'none'
      # COOKIE_SECURE: 'true'
      # COOKIE_SECRET: '${COOKIE_SECRET}'
      # VERIFY_EMAILS: 'true'
      # EMAILS_ENABLED: 'true'
      # SMTP_HOST: 'email-smtp.eu-west-1.amazonaws.com'
      # SMTP_PASS: '${SMTP_PASS}'
      # SMTP_USER: 'AKIA2IYHTX7JSRJLISNC'
      # SMTP_PORT: '587'
      # SMTP_SECURE: 'false'
      # SMTP_SENDER: 'matreg Platform <hi@matreg.info>'

      NOTIFY_EMAIL_CHANGE: 'true'
      AUTO_ACTIVATE_NEW_USERS: 'false'
      REDIRECT_URL_SUCCESS: 'https://matreg.info/success'
      REDIRECT_URL_ERROR: 'https://matreg.info/failure'
      MIN_PASSWORD_LENGTH: 6
      DEFAULT_ALLOWED_USER_ROLES: user,me
      ALLOWED_USER_ROLES: user,me

  # TODO Backend plus dev & local

  martin:
    <<: *logs_defaults
    image: urbica/martin:1.0.0-alpha.0
    restart: unless-stopped
    environment:
      WATCH_MODE: "true"
      DATABASE_URL: "host=postgres dbname=matreg port=5432 user=${DB_LOGIN} password=${DB_PASSWORD}"
    ports:
      - '3000'
    depends_on:
      - postgres

volumes:
  caddy_data:
  pg_data:
